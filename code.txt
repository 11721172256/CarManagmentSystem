import java.util.ArrayList;
import java.util.Scanner;
class Car {
    private String carId;
    private String model;
    private String color;
    private double price;

    public Car(String carId, String model, String color, double price) {
        this.carId = carId;
        this.model = model;
        this.color = color;
        this.price = price;
    }

    public String getCarId() {
        return carId;
    }

    public String getModel() {
        return model;
    }

    public String getColor() {
        return color;
    }

    public double getPrice() {
        return price;
    }

    @Override
    public String toString() {
        return "Car ID: " + carId + ", Model: " + model + ", Color: " + color + ", Price: $" + price;
    }
}

class Customer {
    private String customerId;
    private String name;
    private String phone;
    private String email;
    private String address;

    public Customer(String customerId, String name, String phone, String email, String address) {
        this.customerId = customerId;
        this.name = name;
        this.phone = phone;
        this.email = email;
        this.address = address;
    }

    public String getCustomerId() {
        return customerId;
    }

    public String getName() {
        return name;
    }

    public String getPhone() {
        return phone;
    }

    public String getEmail() {
        return email;
    }

    public String getAddress() {
        return address;
    }

    @Override
    public String toString() {
        return "Customer ID: " + customerId + ", Name: " + name + ", Phone: " + phone + ", Email: " + email + ", Address: " + address;
    }
}

class Sale {
    private String saleId;
    private Car car;
    private Customer customer;

    public Sale(String saleId, Car car, Customer customer) {
        this.saleId = saleId;
        this.car = car;
        this.customer = customer;
    }

    @Override
    public String toString() {
        return "Sale ID: " + saleId + ", Car: [" + car + "], Customer: [" + customer + "]";
    }
}

class OnlineShowroom {
    private static ArrayList<Car> cars = new ArrayList<>();

    public static void displayCars() {
        System.out.println("\nOnline Showroom:");
        if (cars.isEmpty()) {
            System.out.println("No cars available.");
        } else {
            for (Car car : cars) {
                System.out.println(car);
            }
        }
    }

    public static void inquireAboutCar(Scanner scanner) {
        if (cars.isEmpty()) {
            System.out.println("No cars available for inquiry.");
            return;
        }

        System.out.print("Enter Car ID to inquire about: ");
        String carId = scanner.nextLine();

        Car car = findCarById(carId);
        if (car != null) {
            System.out.println("Please fill out the form to inquire about the car:");
            System.out.print("Name: ");
            String name = scanner.nextLine();
            System.out.print("Phone: ");
            String phone = scanner.nextLine();
            System.out.print("Email: ");
            String email = scanner.nextLine();
            System.out.println("Your inquiry has been submitted. Our team will contact you soon.");
        } else {
            System.out.println("Car not found with ID: " + carId);
        }
    }

    public static void scheduleVirtualTestDrive(Scanner scanner) {
        if (cars.isEmpty()) {
            System.out.println("No cars available for test drive.");
            return;
        }
        
        System.out.print("Enter Car ID to schedule a virtual test drive: ");
        String carId = scanner.nextLine();

        Car car = findCarById(carId);
        if (car != null) {
            System.out.println("Please fill out the form to schedule a virtual test drive:");
            System.out.print("Name: ");
            String name = scanner.nextLine();
            System.out.print("Phone: ");
            String phone = scanner.nextLine();
            System.out.print("Email: ");
            String email = scanner.nextLine();
            System.out.println("Your test drive has been scheduled. We will send you the details shortly.");
        } else {
            System.out.println("Car not found with ID: " + carId);
        }
    }

    private static Car findCarById(String carId) {
        for (Car car : cars) {
            if (car.getCarId().equalsIgnoreCase(carId)) {
                return car;
            }
        }
        return null;
    }

    public static void addCar(Car car) {
        cars.add(car);
    }
}

public class CarMarketingManagementSystem {
    private static ArrayList<Car> cars = new ArrayList<>();
    private static ArrayList<Customer> customers = new ArrayList<>();
    private static ArrayList<Sale> sales = new ArrayList<>();

    public static void main(String[] args) {
        initializeData();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\nCar Marketing Management System");
            System.out.println("1. Add Car");
            System.out.println("2. View Cars");
            System.out.println("3. Search Car by Model");
            System.out.println("4. Add Customer");
            System.out.println("5. View Customers");
            System.out.println("6. Filter Customers by Name");
            System.out.println("7. Record Sale");
            System.out.println("8. View Sales");
            System.out.println("9. Online Showroom");
            System.out.println("10. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    addCar(scanner);
                    break;
                case 2:
                    viewCars();
                    break;
                case 3:
                    searchCarByModel(scanner);
                    break;
                case 4:
                    addCustomer(scanner);
                    break;
                case 5:
                    viewCustomers();
                    break;
                case 6:
                    filterCustomersByName(scanner);
                    break;
                case 7:
                    recordSale(scanner);
                    break;
                case 8:
                    viewSales();
                    break;
                case 9:
                    onlineShowroomMenu(scanner);
                    break;
                case 10:
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void initializeData() {
        cars.add(new Car("C001", "Tesla Model S", "Red", 79999.99));
        cars.add(new Car("C002", "BMW X5", "Black", 60999.99));
        cars.add(new Car("C003", "Audi A6", "White", 55999.99));

        customers.add(new Customer("CU001", "Alice Johnson", "555-1234", "alice@example.com", "123 Main St"));
        customers.add(new Customer("CU002", "Bob Smith", "555-5678", "bob@example.com", "456 Elm St"));
        customers.add(new Customer("CU003", "Carol Williams", "555-8765", "carol@example.com", "789 Oak St"));

        sales.add(new Sale("S001", cars.get(0), customers.get(0)));
        sales.add(new Sale("S002", cars.get(1), customers.get(1)));
    }

    private static void addCar(Scanner scanner) {
        System.out.print("Enter Car ID: ");
        String carId = scanner.nextLine();
        System.out.print("Enter Car Model: ");
        String model = scanner.nextLine();
        System.out.print("Enter Car Color: ");
        String color = scanner.nextLine();
        System.out.print("Enter Car Price: ");
        double price = scanner.nextDouble();
        scanner.nextLine(); // Consume newline

        cars.add(new Car(carId, model, color, price));
        System.out.println("Car added successfully.");
    }

    private static void viewCars() {
        if (cars.isEmpty()) {
            System.out.println("No cars available.");
        } else {
            System.out.println("Available Cars:");
            for (Car car : cars) {
                System.out.println(car);
            }
        }
    }

    private static void searchCarByModel(Scanner scanner) {
        System.out.print("Enter Car Model to search: ");
        String model = scanner.nextLine();

        ArrayList<Car> foundCars = new ArrayList<>();
        for (Car car : cars) {
            if (car.getModel().equalsIgnoreCase(model)) {
                foundCars.add(car);
            }
        }

        if (foundCars.isEmpty()) {
            System.out.println("No cars found for model: " + model);
        } else {
            System.out.println("Cars found for model " + model + ":");
            for (Car car : foundCars) {
                System.out.println(car);
            }
        }
    }

    private static void addCustomer(Scanner scanner) {
        System.out.print("Enter Customer ID: ");
        String customerId = scanner.nextLine();
        System.out.print("Enter Customer Name: ");
        String name = scanner.nextLine();
        System.out.print("Enter Customer Phone: ");
        String phone = scanner.nextLine();
        System.out.print("Enter Customer Email: ");
        String email = scanner.nextLine();
        System.out.print("Enter Customer Address: ");
        String address = scanner.nextLine();

        customers.add(new Customer(customerId, name, phone, email, address));
        System.out.println("Customer added successfully.");
    }

    private static void viewCustomers() {
        if (customers.isEmpty()) {
            System.out.println("No customers available.");
        } else {
            System.out.println("Available Customers:");
            for (Customer customer : customers) {
                System.out.println(customer);
            }
        }
    }

    private static void filterCustomersByName(Scanner scanner) {
        System.out.print("Enter Customer Name to filter: ");
        String name = scanner.nextLine();

        ArrayList<Customer> foundCustomers = new ArrayList<>();
        for (Customer customer : customers) {
            if (customer.getName().equalsIgnoreCase(name)) {
                foundCustomers.add(customer);
            }
        }

        if (foundCustomers.isEmpty()) {
            System.out.println("No customers found with name: " + name);
        } else {
            System.out.println("Customers found with name " + name + ":");
            for (Customer customer : foundCustomers) {
                System.out.println(customer);
            }
        }
    }

    private static void recordSale(Scanner scanner) {
        System.out.print("Enter Sale ID: ");
        String saleId = scanner.nextLine();
        System.out.print("Enter Car ID: ");
        String carId = scanner.nextLine();
        System.out.print("Enter Customer ID: ");
        String customerId = scanner.nextLine();

        Car car = null;
        for (Car c : cars) {
            if (c.getCarId().equals(carId)) {
                car = c;
                break;
            }
        }

        Customer customer = null;
        for (Customer c : customers) {
            if (c.getCustomerId().equals(customerId)) {
                customer = c;
                break;
            }
        }

        if (car != null && customer != null) {
            sales.add(new Sale(saleId, car, customer));
            System.out.println("Sale recorded successfully.");
        } else {
            System.out.println("Invalid Car ID or Customer ID. Sale not recorded.");
        }
    }

    private static void viewSales() {
        if (sales.isEmpty()) {
            System.out.println("No sales recorded.");
        } else {
            System.out.println("Sales Records:");
            for (Sale sale : sales) {
                System.out.println(sale);
            }
        }
    }

    private static void onlineShowroomMenu(Scanner scanner) {
        while (true) {
            System.out.println("\nOnline Showroom");
            System.out.println("1. Display Cars");
            System.out.println("2. Inquire About a Car");
            System.out.println("3. Schedule a Virtual Test Drive");
            System.out.println("4. Go Back");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1:
                    OnlineShowroom.displayCars();
                    break;
                case 2:
                    OnlineShowroom.inquireAboutCar(scanner);
                    break;
                case 3:
                    OnlineShowroom.scheduleVirtualTestDrive(scanner);
                    break;
                case 4:
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}